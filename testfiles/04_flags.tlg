This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1: defining flags
============================================================
============================================================
============================================================
TEST 2: using flags
============================================================
.not raised.
.0 .
...1 .
.1.
.....3.
.....true.
...true.
...false.
...false.
.raised.
============================================================
============================================================
TEST 3: resetting a flag
============================================================
1
0
============================================================
============================================================
TEST 4: get flag heights
============================================================
.Height is: 1.
.Heights are: {1}{2}{3}.
============================================================
============================================================
TEST 5: define secondary flag keys
============================================================
============================================================
============================================================
TEST 6: use secondary flag keys
============================================================
.a `b'. bool false. flag not raised.
.a `b'. bool true.  flag not raised.
.a `b'. bool true.  flag not raised.
.a `b'. bool false. flag not raised.
.a `b'. bool false. flag not raised.
.a `b'. bool true.  flag not raised.
.a `b'. bool true.  flag not raised.
.a `b'. bool false. flag not raised.
.a `b'. bool false. flag not raised.
.a `b'. bool false. flag raised.
.a `b'. bool false. flag not raised.
============================================================
============================================================
TEST 7: errors during definition
============================================================
! expkv-cs Error: Missing value for key `flag-true key'.
\ekvc@err@value@required ...ey `\unexpanded {#1}'}
l. ...  }
This error message was generated by an \errmessage
command, so I can't give any explicit help.
Pretend that you're Hercule Poirot: Examine all clues,
and deduce the truth by order and method.
! expkv-cs Error: Missing value for key `flag-false key'.
\ekvc@err@value@required ...ey `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: Missing value for key `flag-bool key'.
\ekvc@err@value@required ...ey `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: Missing value for key `flag-raise key'.
\ekvc@err@value@required ...ey `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: prefix `long' not accepted for `flag-true key'.
\ekvc@err@no@long ...epted for `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: prefix `long' not accepted for `flag-false key'.
\ekvc@err@no@long ...epted for `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: prefix `long' not accepted for `flag-bool key'.
\ekvc@err@no@long ...epted for `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: prefix `long' not accepted for `flag-raise key'.
\ekvc@err@no@long ...epted for `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
============================================================
============================================================
TEST 8: errors during usage
============================================================
! Undefined control sequence.
<argument> \! expkv Error: 
                           value forbidden (`true', set `\testKV').
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \! expkv Error: 
                           value forbidden (`false', set `\testKV').
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \! expkv Error: 
                           value forbidden (`raise', set `\testKV').
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \! expkv Error: 
                           value required (`bool', set `\testKV').
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \! expkv-cs Error: 
                              invalid boolean value `False'.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
a `b'. bool false. flag not raised
a `b'. bool false. flag not raised
a `b'. bool false. flag not raised
a `b'. bool false. flag not raised
a `b'. bool false. flag not raised
============================================================
