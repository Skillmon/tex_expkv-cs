This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1: defining flags
============================================================
============================================================
============================================================
TEST 2: using flags
============================================================
.not raised.
.0 .
...1 .
.1.
.....3.
.....true.
...true.
...false.
...false.
.raised.
============================================================
============================================================
TEST 3: resetting a flag
============================================================
1
0
============================================================
============================================================
TEST 4: get flag heights
============================================================
.Height is: 1.
.Heights are: {1}{2}{3}.
============================================================
============================================================
TEST 5: define secondary flag keys
============================================================
============================================================
============================================================
TEST 6: use secondary flag keys
============================================================
.a `b'. bool false. flag not raised.
.a `b'. bool true.  flag not raised.
.a `b'. bool true.  flag not raised.
.a `b'. bool false. flag not raised.
.a `b'. bool false. flag not raised.
.a `b'. bool true.  flag not raised.
.a `b'. bool true.  flag not raised.
.a `b'. bool false. flag not raised.
.a `b'. bool false. flag not raised.
.a `b'. bool false. flag raised.
.a `b'. bool false. flag not raised.
============================================================
============================================================
TEST 7: errors during definition
============================================================
! expkv-cs Error: Missing value for key `flag-true key'.
\ekvc@err@value@required ...ey `\unexpanded {#1}'}
l. ...  }
This error message was generated by an \errmessage
command, so I can't give any explicit help.
Pretend that you're Hercule Poirot: Examine all clues,
and deduce the truth by order and method.
! expkv-cs Error: Missing value for key `flag-false key'.
\ekvc@err@value@required ...ey `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: Missing value for key `flag-bool key'.
\ekvc@err@value@required ...ey `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: Missing value for key `flag-raise key'.
\ekvc@err@value@required ...ey `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: prefix `long' not accepted for `flag-true key'.
\ekvc@err@no@long ...epted for `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: prefix `long' not accepted for `flag-false key'.
\ekvc@err@no@long ...epted for `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: prefix `long' not accepted for `flag-bool key'.
\ekvc@err@no@long ...epted for `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
! expkv-cs Error: prefix `long' not accepted for `flag-raise key'.
\ekvc@err@no@long ...epted for `\unexpanded {#1}'}
l. ...  }
(That was another \errmessage.)
============================================================
============================================================
TEST 8: errors during usage
============================================================
Runaway argument?
! expkv Error: unwanted value for `true' in set `\testKV'
! Paragraph ended before \<an-expandable-macro>
completed due to above exception.  If the error
summary is  not comprehensible  see the package
documentation.
I will try to recover now.  If you're in inter-
active mode hit <return>  at the ? prompt and I
continue hoping recovery was complete.
<to be read again> 
                   \par 
l. ...  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
Runaway argument?
! expkv Error: unwanted value for `false' in set `\testKV'
! Paragraph ended before \<an-expandable-macro>
completed due to above exception.  If the error
summary is  not comprehensible  see the package
documentation.
I will try to recover now.  If you're in inter-
active mode hit <return>  at the ? prompt and I
continue hoping recovery was complete.
<to be read again> 
                   \par 
l. ...  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
Runaway argument?
! expkv Error: unwanted value for `raise' in set `\testKV'
! Paragraph ended before \<an-expandable-macro>
completed due to above exception.  If the error
summary is  not comprehensible  see the package
documentation.
I will try to recover now.  If you're in inter-
active mode hit <return>  at the ? prompt and I
continue hoping recovery was complete.
<to be read again> 
                   \par 
l. ...  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
Runaway argument?
! expkv Error: missing value for `bool' in set `\testKV'
! Paragraph ended before \<an-expandable-macro>
completed due to above exception.  If the error
summary is  not comprehensible  see the package
documentation.
I will try to recover now.  If you're in inter-
active mode hit <return>  at the ? prompt and I
continue hoping recovery was complete.
<to be read again> 
                   \par 
l. ...  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
Runaway argument?
! expkv-cs Error: invalid boolean value `False'
! Paragraph ended before \<an-expandable-macro>
completed due to above exception.  If the error
summary is  not comprehensible  see the package
documentation.
I will try to recover now.  If you're in inter-
active mode hit <return>  at the ? prompt and I
continue hoping recovery was complete.
<to be read again> 
                   \par 
l. ...  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
a `b'. bool false. flag not raised
a `b'. bool false. flag not raised
a `b'. bool false. flag not raised
a `b'. bool false. flag not raised
a `b'. bool false. flag not raised
============================================================
